# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
workflows:
  version: 2
  circleci_tests:
    jobs:
      - linters
      - flaky_tests
      - non_flaky_tests

var_for_docker_image: &docker_image circleci/android:api-28

anchor_for_job_defaults: &job_defaults
  working_directory: ~/repo
  environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
  docker:
    - image: *docker_image

anchor_for_android_dependencies: &install_android_dependencies
  name: Install Android dependencies
  command: ./.circleci/gradle/gradlew androidDependencies

anchor_for_install_ktlint: &install_ktlint
  name: Download latest Ktlint
  command: >
        get_latest_release() {
            curl --silent "https://api.github.com/repos/$1/releases/latest" |
            grep '"tag_name":' |
            sed -E 's/.*"([^"]+)".*/\1/'
        }

        KTLINT=$(get_latest_release pinterest/ktlint)

        echo Using Ktlint $KTLINT

        curl -sSLO
        https://github.com/pinterest/ktlint/releases/download/$KTLINT/ktlint

        chmod a+x ktlint

anchor_for_restore_cache: &restore_cache
  key: jars-{{ checksum "build.gradle" }}

version: 2
jobs:
  linters:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          <<: *install_ktlint
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Kotlin tests - Data, Utility
          command: ./ktlint utility/**/*.kt data/**/*.kt && echo "Lint completed successfully"
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  flaky_tests:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          <<: *install_android_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: App tests
          command: ./.circleci/gradle/gradlew -i :app:test
      - run:
          name: Data tests
          command: ./.circleci/gradle/gradlew -i :data:test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  non_flaky_tests:
    <<: *job_defaults
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          <<: *install_android_dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Utility tests
          command: ./.circleci/gradle/gradlew -i :utility:test
      - run:
          name: Domain tests
          command: ./.circleci/gradle/gradlew -i :domain:test
      - run:
          name: App -  Parser, RecyclerView, Utility tests
          command: ./.circleci/gradle/gradlew -i :app:testDebugUnitTest --tests org.oppia.app.parser* --tests org.oppia.app.recyclerview* --tests org.oppia.app.utility* 
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
