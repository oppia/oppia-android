apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    multiDexEnabled true
    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath true
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
      all {
        // Enable forking to ensure each test is properly run in isolation. For context, see:
        // https://discuss.gradle.org/t/36066/2 & https://github.com/oppia/oppia-android/issues/1942
        forkEvery = 1
        maxParallelForks = Runtime.getRuntime().availableProcessors()

        // https://discuss.gradle.org/t/29495/2 & https://stackoverflow.com/a/34299238.
        testLogging {
          events "passed", "skipped", "failed"
          showExceptions = true
          exceptionFormat = "full"
          showCauses = true
          showStackTraces = true
          showStandardStreams = false
        }
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation(
      'androidx.appcompat:appcompat:1.0.2',
      'com.android.support:multidex:1.0.3',
      'com.google.dagger:dagger:2.24',
      'com.google.protobuf:protobuf-lite:3.0.0',
      'com.squareup.moshi:moshi-kotlin:1.11.0',
      'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.2',
  )
  testImplementation(
      'android.arch.core:core-testing:1.1.1',
      'androidx.test.ext:junit:1.1.1',
      'com.google.dagger:dagger:2.24',
      'com.google.truth:truth:0.43',
      'com.squareup.okhttp3:mockwebserver:4.1.0',
      'com.squareup.okhttp3:okhttp:4.1.0',
      'junit:junit:4.12',
      'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.2',
      'org.mockito:mockito-core:2.19.0',
      'org.robolectric:robolectric:4.3',
      project(":testing"),
  )
  // TODO (#59): Remove this once Bazel is introduced
  // TODO (#97): Isolate retrofit-mock dependency from production
  api(
      'com.squareup.retrofit2:converter-moshi:2.5.0',
      'com.squareup.retrofit2:retrofit:2.5.0',
      'com.squareup.retrofit2:retrofit-mock:2.5.0',
  )
  androidTestImplementation('androidx.test:runner:1.2.0',
      'androidx.test.espresso:espresso-core:3.2.0')
  kapt("com.squareup.moshi:moshi-kotlin-codegen:1.11.0")
  kaptTest(
      'com.google.dagger:dagger-compiler:2.24'
  )

  implementation project(":utility")
  implementation project(":model")
  testImplementation project(":model")
}
// The GeneratedMessageLite implementations of protobufs are depending on protobuf-java
// instead of protobuf-lite after Android Studio 3.5,
// The below command stops that from happening: https://github.com/google/tink/issues/282
configurations {
  all*.exclude module: 'protobuf-java'
}
