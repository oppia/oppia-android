// Code generated by moshi-kotlin-codegen. Do not edit.
package org.oppia.data.backends.gae.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.String

class GaeStorySummaryJsonAdapter(moshi: Moshi) : JsonAdapter<GaeStorySummary>() {
    private val options: JsonReader.Options = JsonReader.Options.of("id", "title", "description")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "storyId")

    override fun toString(): String = "GeneratedJsonAdapter(GaeStorySummary)"

    override fun fromJson(reader: JsonReader): GaeStorySummary {
        var storyId: String? = null
        var title: String? = null
        var description: String? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> storyId = nullableStringAdapter.fromJson(reader)
                1 -> title = nullableStringAdapter.fromJson(reader)
                2 -> description = nullableStringAdapter.fromJson(reader)
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = GaeStorySummary(
                storyId = storyId,
                title = title,
                description = description)
        return result
    }

    override fun toJson(writer: JsonWriter, value: GaeStorySummary?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("id")
        nullableStringAdapter.toJson(writer, value.storyId)
        writer.name("title")
        nullableStringAdapter.toJson(writer, value.title)
        writer.name("description")
        nullableStringAdapter.toJson(writer, value.description)
        writer.endObject()
    }
}
