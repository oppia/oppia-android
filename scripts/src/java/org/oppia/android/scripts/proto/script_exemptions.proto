syntax = "proto3";

package proto;

option java_package = "org.oppia.android.scripts.proto";
option java_multiple_files = true;

// Exemptions for the test-file check.
// Exemptions indicate files either for which we should not check for having test files,
// or to override the minimum coverage threshold for the code coverage analysis.
message TestFileExemptions {
  // List of all test file exemptions.
  //
  // Also, note that the file paths in the textproto file are maintained in lexicographical order.
  // While adding any new file, please add it only at the correct lexicographical position, so that
  // the list remains sorted.
  //
  // For example, to exempt 'ActivityComponent.kt' from the test-file check, add:
  // ```
  // test_file_exemption {
  //   exempted_file_path: "app/src/main/java/org/oppia/android/app/activity/ActivityComponent.kt"
  //   test_file_not_required: true
  // }
  // ```
  //
  // Example for overriding minimum coverage threshold:
  // ```
  // test_file_exemption {
  //   exempted_file_path: "utility/src/main/java/org/oppia/android/util/math/ComparatorExtensions.kt"
  //   override_min_coverage_percent_required: 0
  // }
  // ```
  repeated TestFileExemption test_file_exemption = 1;

  // Represents an individual test file exemption.
  message TestFileExemption {
    // Provide the relative path to the file in 'script/assets/test_file_exemptions.textproto'
    // along with any one of the states of exemption:
    // 1.'test_file_not_required' to exempt the test itself.
    // 2.'override_min_coverage_percent_required' to have the test file but override min coverage threshold
    //
    // The relative path to the file from the root directory.
    string exempted_file_path = 1;

    // Specifies the type of exemption.
    oneof exemption_type {
      // Indicates that a test file is not required for the given file.
      bool test_file_not_required = 2;

      // Overrides the minimum coverage percent required for the given file.
      int32 override_min_coverage_percent_required = 3;
    }
  }
}

// Exemptions for the accessibility label check. Exemptions indicate Activities for which we should
// not check for the presence of an accessibility label.
message AccessibilityLabelExemptions {
  // List of all the Activities which should be exempted for the accessibility label check.
  // For exempting any Activity, provide its relative path to root in
  // 'script/assets/accessibility_label_exemptions.textproto'
  // Also, note that the exemptions in the textproto file are maintained in lexicographical order.
  // While adding any new Activity, please add it only at the correct lexicographical position,
  // so that the list remains sorted.
  //
  // For example if we want to add the 'RecentlyPlayedActivity' to the exemption list, add:
  // 'exempted_activity: "app/src/main/java/org/oppia/android/app/home/HomeActivity"'
  // at the correct lexicographical position in the textproto file.
  repeated string exempted_activity = 1;
}

// Exemptions for the KDoc validity check. Exemptions indicate files for which we should
// not check for the presence of KDocs.
message KdocValidityExemptions {
  // List of all the files which should be exempted for the KDoc check.
  // For exempting any file, provide its relative path to root in
  // 'script/assets/kdoc_validity_exemptions.textproto'.
  // Also, note that the exemptions in the text proto file are maintained in lexicographical order.
  // While adding any new file, please add it only at the correct lexicographical position,
  // so that the list remains sorted.
  //
  // For example if we want to add the 'ActivityComponent.kt' file to the exemption list, add:
  // 'exempted_file_path: "app/src/main/java/org/oppia/android/app/activity/ActivityComponent.kt"'
  // at the correct lexicographical position in the text proto file.
  repeated string exempted_file_path = 1;
}

// Exemptions for the TODO open check.
message TodoOpenExemptions {
  // List of all the TODO open exemptions.
  repeated TodoOpenExemption todo_open_exemption = 1;
}

// A TodoOpen exemption indicates the usage of a TODO keyword which is not meant to accomplish a
// future work item. For example when a TODO keyword is used for documentation purpose.
message TodoOpenExemption {
  // The path of the file relative to the root repository to be exempted for the check.
  string exempted_file_path = 1;
  // The line number of the exempted TODO.
  repeated int32 line_number = 2;
}
