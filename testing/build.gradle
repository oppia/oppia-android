apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
      all {
        // Enable forking to ensure each test is properly run in isolation. For context, see:
        // https://discuss.gradle.org/t/36066/2 & https://github.com/oppia/oppia-android/issues/1942
        forkEvery = 1
        maxParallelForks = Runtime.getRuntime().availableProcessors()

        // https://discuss.gradle.org/t/29495/2 & https://stackoverflow.com/a/34299238.
        testLogging {
          events "passed", "skipped", "failed"
          showExceptions = true
          exceptionFormat = "full"
          showCauses = true
          showStackTraces = true
          showStandardStreams = false
        }
      }
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation(
      'androidx.annotation:annotation:1.1.0',
      'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha03',
      'androidx.test.espresso:espresso-core:3.2.0',
      'androidx.test:runner:1.2.0',
      'com.google.dagger:dagger:2.24',
      'com.google.truth:truth:0.43',
      'nl.dionsegijn:konfetti:1.2.5',
      'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.2',
      'org.robolectric:robolectric:4.3',
      'org.jetbrains.kotlin:kotlin-reflect:$kotlin_version',
      'org.mockito:mockito-core:2.19.0',
      project(":domain"),
      project(":utility"),
  )
  testImplementation(
      'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha03',
      'androidx.test.ext:junit:1.1.1',
      'com.google.truth:truth:0.43',
      'junit:junit:4.12',
      "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
      'org.mockito:mockito-core:2.19.0',
      project(":domain"),
  )
  kapt(
      'com.google.dagger:dagger-compiler:2.24',
  )
  kaptTest(
      'com.google.dagger:dagger-compiler:2.24',
  )
  annotationProcessor(
      'com.google.auto.service:auto-service:1.0-rc4',
  )
  // TODO (#59): Remove this once Bazel is introduced
  // sufficiently visible for generated Dagger code. This can be done more cleanly via Bazel since dependencies can be
  // controlled more directly than in Gradle.
  implementation project(':model')
}
// The GeneratedMessageLite implementations of protobufs are depending on protobuf-java
// instead of protobuf-lite after Android Studio 3.5,
// The below command stops that from happening: https://github.com/google/tink/issues/282
configurations {
  all*.exclude module: 'protobuf-java'
}
