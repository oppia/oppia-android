apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"
  defaultConfig {
    applicationId "org.oppia.android"
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
    multiDexEnabled true
    testInstrumentationRunner "org.oppia.android.testing.OppiaTestRunner"
    // https://developer.android.com/training/testing/junit-runner#ato-gradle
    testInstrumentationRunnerArguments clearPackageData: 'true'
    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath true
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug {
      pseudoLocalesEnabled true
    }
  }
  splits {
    // See: https://developer.android.com/studio/build/configure-apk-splits
    density {
      enable false
    }
  }
  dataBinding {
    enabled = true
  }
  testOptions {
    // https://developer.android.com/training/testing/junit-runner#ato-gradle
    execution 'ANDROIDX_TEST_ORCHESTRATOR'
    unitTests {
      includeAndroidResources = true
      all {
        maxHeapSize = "1024m"

        // Enable forking to ensure each test is properly run in isolation. For context, see:
        // https://discuss.gradle.org/t/36066/2 & https://github.com/oppia/oppia-android/issues/1942
        forkEvery = 1
        maxParallelForks = Runtime.getRuntime().availableProcessors()

        // https://discuss.gradle.org/t/29495/2 & https://stackoverflow.com/a/34299238.
        testLogging {
          events "passed", "skipped", "failed"
          showExceptions = true
          exceptionFormat = "full"
          showCauses = true
          showStackTraces = true
          showStandardStreams = false
        }
      }
    }
    animationsDisabled = true
  }

  // https://proandroiddev.com/isolated-fragments-unit-tests-that-run-both-instrumented-and-on-the-jvm-with-the-same-source-code-283db2e9be5d
  sourceSets {
    androidTest {
      java.srcDirs += "src/sharedTest/java"
      kotlin.srcDirs += "src/sharedTest/java"
    }
    test {
      java.srcDirs += "src/sharedTest/java"
      kotlin.srcDirs += "src/sharedTest/java"
      java.exclude('**/DataBinderMapperImpl.java') // Bazel-specific file used to run tests
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation(
      'android.arch.lifecycle:extensions:1.1.1',
      'androidx.appcompat:appcompat:1.0.2',
      'androidx.constraintlayout:constraintlayout:1.1.3',
      'androidx.core:core-ktx:1.0.2',
      'androidx.legacy:legacy-support-v4:1.0.0',
      'androidx.lifecycle:lifecycle-extensions:2.0.0',
      'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha03',
      'androidx.navigation:navigation-fragment:2.0.0',
      'androidx.navigation:navigation-fragment-ktx:2.0.0',
      'androidx.navigation:navigation-ui:2.0.0',
      'androidx.navigation:navigation-ui-ktx:2.0.0',
      "androidx.fragment:fragment:$fragment_version",
      'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha03',
      'androidx.multidex:multidex:2.0.1',
      'androidx.recyclerview:recyclerview:1.0.0',
      'androidx.work:work-runtime-ktx:2.4.0',
      'com.chaos.view:pinview:1.4.4',
      'com.github.bumptech.glide:glide:4.11.0',
      'com.google.android:flexbox:2.0.1',
      'com.google.android.material:material:1.2.0-alpha02',
      'com.google.dagger:dagger:2.24',
      'com.google.firebase:firebase-analytics:17.5.0',
      'com.google.firebase:firebase-analytics-ktx:17.5.0',
      'com.google.firebase:firebase-core:17.5.0',
      'com.google.firebase:firebase-crashlytics:17.0.0',
      'com.google.guava:guava:28.1-android',
      'com.jackandphantom.android:circularimageview:1.2.0',
      'de.hdodenhof:circleimageview:3.0.1',
      'nl.dionsegijn:konfetti:1.2.5',
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
      'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1',
      'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1',
      'org.mockito:mockito-core:2.7.22',
  )
  testImplementation(
      'androidx.test:core:1.2.0',
      'androidx.test.espresso:espresso-contrib:3.1.0',
      'androidx.test.espresso:espresso-core:3.2.0',
      'androidx.test.espresso:espresso-intents:3.1.0',
      'androidx.test.ext:junit:1.1.1',
      'com.github.bumptech.glide:mocks:4.11.0',
      'com.google.truth:truth:0.43',
      'org.robolectric:annotations:4.3',
      'org.robolectric:robolectric:4.3',
      'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.2',
      "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
      'org.mockito:mockito-core:2.7.22',
      project(":testing"),
  )
  androidTestImplementation(
      'androidx.test:core:1.2.0',
      'androidx.test.espresso:espresso-contrib:3.1.0',
      'androidx.test.espresso:espresso-core:3.2.0',
      'androidx.test.espresso:espresso-intents:3.1.0',
      'androidx.test.ext:junit:1.1.1',
      'com.github.bumptech.glide:mocks:4.11.0',
      'com.google.truth:truth:0.43',
      'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.2',
      'org.mockito:mockito-android:2.7.22',
      'org.robolectric:annotations:4.3',
  )
  // Adding the testing module directly causes duplicates of the below groups so we need to
  // exclude them before adding the testing module to the androidTestImplementation dependencies
  androidTestImplementation (project(":testing")) {
    exclude group: 'org.apache.maven', module: 'maven-artifact'
    exclude group: 'org.apache.maven', module: 'maven-artifact-manager'
    exclude group: 'org.apache.maven', module: 'maven-model'
    exclude group: 'org.apache.maven', module: 'maven-plugin-registry'
    exclude group: 'org.apache.maven', module: 'maven-profile'
    exclude group: 'org.apache.maven', module: 'maven-project'
    exclude group: 'org.apache.maven', module: 'maven-settings'
    exclude group: 'org.apache.maven', module: 'maven-error-diagnostics'
    exclude group: 'org.apache.maven', module: 'maven-ant-tasks'
    exclude group: "org.apache.maven.wagon"
    exclude group: "org.codehaus.plexus"
    exclude group: "org.robolectric"
  }
  androidTestUtil(
      'androidx.test:orchestrator:1.2.0',
  )
  kapt(
      'com.google.dagger:dagger-compiler:2.24'
  )
  kaptTest(
      'com.google.dagger:dagger-compiler:2.24'
  )
  kaptAndroidTest(
      'com.google.dagger:dagger-compiler:2.24'
  )
  // TODO (#59): Remove this once Bazel is introduced
  api project(':data')
  implementation project(":model")
  testImplementation project(":model")
  androidTestImplementation project(":model")
  implementation project(":domain")
  implementation project(":utility")
}
// The GeneratedMessageLite implementations of protobufs are depending on protobuf-java
// instead of protobuf-lite after Android Studio 3.5,
// The below command stops that from happening: https://github.com/google/tink/issues/282
configurations {
  all*.exclude module: 'protobuf-java'
}
