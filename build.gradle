// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.kotlin_version = '1.4.20'
  ext.fragment_version = '1.2.0-rc01'
  ext.jacocoVersion = '0.8.5'
  repositories {
    google()
    jcenter()
    gradlePluginPortal()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.6.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
    classpath 'com.google.gms:google-services:4.3.3'
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.1'
    classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }
}

configurations.all {
  resolutionStrategy {
    eachDependency { details ->
      if (details.requested.group == 'org.jacoco') {
        details.useVersion jacocoVersion
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

subprojects{
  afterEvaluate {
    // kapt doesn't propagate source version properly so even if we set JDK to be 9, if we
    // have a local JDK version of 9+, we see a dagger bug in generating annotations
    // that only occurs in JDK 9+, this is the workaround:
    // (Lots of useful information here: https://github.com/google/dagger/issues/1449)
    if (project.hasProperty('kapt')) {
      // Reference for 'kapt' DSL: https://kotlinlang.org/docs/reference/kapt.html#java-compiler-options
      kapt {
        // we expect this closure to run over a org.jetbrains.kotlin.gradle.plugin.KaptExtension
        javacOptions {
          option("-source", "8")
          option("-target", "8")
        }
      }
    }
  }
}
